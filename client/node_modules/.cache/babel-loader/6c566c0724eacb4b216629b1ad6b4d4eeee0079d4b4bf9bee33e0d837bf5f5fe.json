{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/loginTest/client/src/page/list.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport './../css/list.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const [userData, setUserData] = useState([]); // 사용자 데이터를 저장할 상태\n  const [error, setError] = useState(null); // 에러 메시지 상태\n\n  let show = () => {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userData[0].title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this);\n  };\n  useEffect(() => {\n    // 데이터를 가져오는 비동기 함수\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3030/data/get'); // 서버에서 데이터 가져오기\n        setUserData(response.data || []); // 가져온 데이터를 상태에 저장 (users 배열)\n      } catch (err) {\n        setError(err.message); // 에러 발생 시 상태에 저장\n      }\n    };\n    fetchData(); // 비동기 함수 호출\n  }, []); // 빈 배열: 컴포넌트 마운트 시 한 번 실행\n\n  // 에러 발생 시 화면\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 21\n  }, this);\n\n  // 데이터 렌더링\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAC8C\\uC2DC\\uBB3C \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentBox\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), userData.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"contentLi\",\n              children: [user.title, \" - \", user.content, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"delContent\",\n              onClick: () => {\n                show(user);\n              },\n              children: \"\\uC804\\uCCB4\\uAE00 \\uBCF4\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(List, \"JSAfyB6mcjhE/LY3iDHZzZW2JF0=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","List","_s","userData","setUserData","error","setError","show","children","title","fileName","_jsxFileName","lineNumber","columnNumber","fetchData","response","get","data","err","message","className","map","user","index","content","onClick","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/loginTest/client/src/page/list.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport './../css/list.css';\n\nconst List = () => {\n  const [userData, setUserData] = useState([]); // 사용자 데이터를 저장할 상태\n  const [error, setError] = useState(null); // 에러 메시지 상태\n  \n  let show = ()=>{\n    <div>{userData[0].title}</div>\n  }\n  \n  useEffect(() => {\n    // 데이터를 가져오는 비동기 함수\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3030/data/get'); // 서버에서 데이터 가져오기\n        setUserData(response.data || []); // 가져온 데이터를 상태에 저장 (users 배열)\n      } catch (err) {\n        setError(err.message); // 에러 발생 시 상태에 저장\n      }\n    };\n\n    fetchData(); // 비동기 함수 호출\n  }, []); // 빈 배열: 컴포넌트 마운트 시 한 번 실행\n\n  // 에러 발생 시 화면\n  if (error) return <div>Error: {error}</div>;\n\n  // 데이터 렌더링\n  return (\n  <>\n  \t\t\t\t\t\t<h1>게시물 목록</h1>\n  \t\t\t\t\t\t<div className='contentBox'>\n      <ul>\n  \t\t\t\t\t\t\t\t\t\t\t\t\t\t<hr/>\n        {userData.map((user, index) => (\n          <li key={index} >\n          \t\t<div className='content'>  \n          \t\t\t\t\t\t<span className='contentLi'>{user.title} - {user.content} </span>\n          \t\t\t\t\t\t<span className='delContent' onClick={()=>{show(user)}}>전체글 보기</span>\n          \t\t</div>\n          \t\t<hr/>\n          </li>\n          \n        ))}\n      </ul>\n    </div>\n  </>\n  );\n};\n\nexport default List;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}