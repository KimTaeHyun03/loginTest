{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/loginTest/client/src/page/list.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const [userData, setUserData] = useState([]); // 사용자 데이터를 저장할 상태\n  const [error, setError] = useState(null); // 에러 메시지 상태\n\n  useEffect(() => {\n    // 데이터를 가져오는 비동기 함수\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3030/data/get'); // 서버에서 데이터 가져오기\n        setUserData(response.data || []); // 가져온 데이터를 상태에 저장 (users 배열)\n      } catch (err) {\n        setError(err.message); // 에러 발생 시 상태에 저장\n      }\n    };\n    fetchData(); // 비동기 함수 호출\n  }, []); // 빈 배열: 컴포넌트 마운트 시 한 번 실행\n\n  // 에러 발생 시 화면\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 21\n  }, this);\n\n  // 데이터 렌더링\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: userData.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user._id, \" - \", user.title, \" - \", user.content, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uAE00 \\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"JSAfyB6mcjhE/LY3iDHZzZW2JF0=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","List","_s","userData","setUserData","error","setError","fetchData","response","get","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","index","_id","title","content","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/loginTest/client/src/page/list.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst List = () => {\n  const [userData, setUserData] = useState([]); // 사용자 데이터를 저장할 상태\n  const [error, setError] = useState(null); // 에러 메시지 상태\n\n  useEffect(() => {\n    // 데이터를 가져오는 비동기 함수\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3030/data/get'); // 서버에서 데이터 가져오기\n        setUserData(response.data || []); // 가져온 데이터를 상태에 저장 (users 배열)\n      } catch (err) {\n        setError(err.message); // 에러 발생 시 상태에 저장\n      }\n    };\n\n    fetchData(); // 비동기 함수 호출\n  }, []); // 빈 배열: 컴포넌트 마운트 시 한 번 실행\n\n  // 에러 발생 시 화면\n  if (error) return <div>Error: {error}</div>;\n\n  // 데이터 렌더링\n  return (\n    <div>\n      <h1>User Data</h1>\n      <ul>\n        {userData.map((user, index) => (\n          <li key={index}>\n            {user._id} - {user.title} - {user.content} \n          \t\t\t\t\t\t<span>글 삭제</span>\n          </li>\n          \n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default List;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,gCAAgC,CAAC,CAAC,CAAC;QACpEL,WAAW,CAACI,QAAQ,CAACE,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;MACpC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZL,QAAQ,CAACK,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC;MACzB;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,IAAIF,KAAK,EAAE,oBAAOL,OAAA;IAAAa,QAAA,GAAK,SAAO,EAACR,KAAK;EAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;;EAE3C;EACA,oBACEjB,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBjB,OAAA;MAAAa,QAAA,EACGV,QAAQ,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBpB,OAAA;QAAAa,QAAA,GACGM,IAAI,CAACE,GAAG,EAAC,KAAG,EAACF,IAAI,CAACG,KAAK,EAAC,KAAG,EAACH,IAAI,CAACI,OAAO,eACrCvB,OAAA;UAAAa,QAAA,EAAM;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAFdG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CAEL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CApCID,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}