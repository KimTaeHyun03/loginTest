{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/loginTest/client/src/page/main.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Main = () => {\n  url = async function fetchData() {\n    try {\n      const response = await axios.get(url);\n      console.log(response.data); // 서버에서 받은 데이터\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  fetchData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Main","url","fetchData","response","get","console","log","data","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/loginTest/client/src/page/main.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nlet Main = ()=>{\n\t\t\t\t\n\t\t\t\turl=\n\nasync function fetchData() {\n  try {\n    const response = await axios.get(url);\n    console.log(response.data); // 서버에서 받은 데이터\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\nfetchData();\n\t\t\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t)\n}\nexport default Main;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,IAAIC,IAAI,GAAGA,CAAA,KAAI;EAEXC,GAAG,GAEP,eAAeC,SAASA,CAAA,EAAG;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACH,GAAG,CAAC;MACrCI,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAEDN,SAAS,CAAC,CAAC;EACP,oBACAH,OAAA;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGK,CAAC;AAIV,CAAC;AAAAC,EAAA,GAtBGb,IAAI;AAuBR,eAAeA,IAAI;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}